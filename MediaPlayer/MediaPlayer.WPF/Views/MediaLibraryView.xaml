<views:MvxWpfView x:Class="MediaPlayer.WPF.Views.MediaLibraryView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                  xmlns:local="clr-namespace:MediaPlayer.WPF.Views"
                  xmlns:extensions="clr-namespace:MediaPlayer.WPF.Classes"
                  xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
                  xmlns:viewmodels="clr-namespace:MediaPlayer.Core.ViewModels;assembly=MediaPlayer.Core"
                  d:DataContext="{d:DesignInstance Type=viewmodels:MediaLibraryViewModel}"
                  mc:Ignorable="d">
    <views:MvxWpfView.Resources>
    </views:MvxWpfView.Resources>
    <DockPanel>

        <StatusBar x:Name="PlayPanel" DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Row="0" Grid.ColumnSpan="5">
                <Slider Minimum="0"
                        Maximum="{Binding LoadedTrack.ControlDuration}"
                        Width="{Binding Path=ActualWidth, ElementName=PlayPanel}"
                        extensions:SliderExtension.DragStartedCommand="{Binding SlideStartedCommand}"
                        extensions:SliderExtension.DragCompletedCommand="{Binding SlideCompletedCommand}"
                        Value="{Binding PlayerPosition, Mode=TwoWay}"
                        HorizontalContentAlignment="Stretch"
                        IsEnabled="{Binding IsTrackLoaded}"
                        Margin="5,0" />
            </StatusBarItem>
            <StatusBarItem Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayProgression}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" HorizontalContentAlignment="Center">
                <WrapPanel>
                    <WrapPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="5,0" />
                        </Style>
                    </WrapPanel.Resources>
                    <Button Content="Stop" mvx:Bi.nd="Command StopCommand" />
                    <Button Content="Back" mvx:Bi.nd="Command SkipBackCommand" />
                    <ToggleButton Width="35"
                                  HorizontalAlignment="Center"
                                  mvx:Bi.nd="Command PlayPauseCommand"
                                  IsChecked="{Binding IsTrackPlaying, Mode=OneWay}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Content" Value="Play"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="Pause"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Button Content="Fwrd" mvx:Bi.nd="Command SkipForwardCommand" />
                    <Slider x:Name="VolumeSlider"
                            Minimum="0"
                            Maximum="100"
                            Interval="1"
                            Value="{Binding PlayerVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Width="50"
                            AutoToolTipPlacement="BottomRight" />
                </WrapPanel>
            </StatusBarItem>
        </StatusBar>

        <DockPanel x:Name="NavigationPanel" DockPanel.Dock="Left" Width="150">
            <TextBox DockPanel.Dock="Bottom"
                     BorderBrush="Black"
                     Text="{Binding NewPlaylistName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Button DockPanel.Dock="Bottom"
                    Content="Create New Playlist"
                    Margin="2"
                    IsEnabled="{Binding CanCreatePlaylist}"
                    mvx:Bi.nd="Command CreatePlaylistCommand" />
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="0,10" />
                    </Style>
                </StackPanel.Resources>
                <Button Content="Artists" mvx:Bi.nd="Command ShowArtistsCommand" />
                <Button Content="Albums" mvx:Bi.nd="Command ShowAlbumsCommand" />
                <Button Content="Genres" mvx:Bi.nd="Command ShowGenresCommand" />
                <Button Content="Playlists" mvx:Bi.nd="Command ShowPlaylistsCommand" />
                <Button Content="Songs" mvx:Bi.nd="Command ShowTracksCommand" />
            </StackPanel>
        </DockPanel>

        <Grid x:Name="QueuePanel" DockPanel.Dock="Right" Width="200">
            <ListView ItemsSource="{Binding TrackQueue}"
                      SelectedIndex="{Binding SelectedQueueIndex, Mode=TwoWay}">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Play Track" mvx:Bi.nd="Command JumpQueueCommand" />
                        <MenuItem Header="Remove from Queue" mvx:Bi.nd="Command RemoveTrackCommand" />
                        <MenuItem Header="Clear Queue" mvx:Bi.nd="Command ClearQueueCommand" />
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.View>
                    <GridView>
                        <GridViewColumn DisplayMemberBinding="{Binding TrackName}" Width="150"/>
                        <GridViewColumn DisplayMemberBinding="{Binding DisplayDuration}" Width="50" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
                
        <Grid x:Name="MainViewPanel">
            <Grid.Resources>
                <Style TargetType="extensions:CustomGrid">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Grid.Row" Value="0" />
                    <Setter Property="Width" Value="150" />
                    <Setter Property="HorizontalAlignment" Value="Right" />
                </Style>
                <Style TargetType="DataGrid">
                    <Setter Property="Grid.Row" Value="1" />
                    <Setter Property="AutoGenerateColumns" Value="False" />
                    <Setter Property="EnableRowVirtualization" Value="True" />
                    <Setter Property="EnableColumnVirtualization" Value="True" />
                    <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                    <Setter Property="CanUserAddRows" Value="False" />
                    <Setter Property="SelectionMode" Value="Single" />
                    <Setter Property="CanUserSortColumns" Value="False" />
                </Style>
            </Grid.Resources>
            <extensions:CustomGrid x:Name="gdArtists"
                                   IsShowing="{Binding ShowingArtists}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding ArtistSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgArtists"
                          ItemsSource="{Binding DisplayArtists}"
                          SelectedItem="{Binding SelectedArtist, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ShowArtistTracksCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play" mvx:Bi.nd="Command PlayArtistCommand" />
                            <MenuItem Header="Add to Queue" mvx:Bi.nd="Command AddArtistCommand" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" 
                                            Binding="{Binding ArtistName}"
                                            Width="Auto" />
                    </DataGrid.Columns>
                </DataGrid>
            </extensions:CustomGrid>
            <extensions:CustomGrid x:Name="gdAlbums"
                                   IsShowing="{Binding ShowingAlbums}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding AlbumSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgAlbums"
                          ItemsSource="{Binding DisplayAlbums}"
                          SelectedItem="{Binding SelectedAlbum, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ShowAlbumTracksCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play" mvx:Bi.nd="Command PlayAlbumCommand">
                                <MenuItem Header="Album" mvx:Bi.nd="Command PlayAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command PlayArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to Queue" mvx:Bi.nd="Command AddAlbumCommand">
                                <MenuItem Header="Album" mvx:Bi.nd="Command AddAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command AddArtistCommand" />
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Album Name"
                                            Width="Auto"
                                            Binding="{Binding AlbumName}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Artist Name"
                                            Width="Auto"
                                            Binding="{Binding Artist.ArtistName}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Year"
                                            Width="Auto"
                                            Binding="{Binding ReleaseYear}"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
            </extensions:CustomGrid>
            <extensions:CustomGrid x:Name="gdGenres"
                                   IsShowing="{Binding ShowingGenres}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding GenreSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgGenres"
                          ItemsSource="{Binding DisplayGenres}"
                          SelectedItem="{Binding SelectedGenre, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ShowGenreTracksCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play Genre" mvx:Bi.nd="Command PlayGenreCommand" />
                            <MenuItem Header="Add Genre to Queue" mvx:Bi.nd="Command AddGenreCommand" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Gerne Name"
                                            Binding="{Binding GenreName}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>

                </DataGrid>
            </extensions:CustomGrid>
            <extensions:CustomGrid x:Name="gdPlaylists"
                                   IsShowing="{Binding ShowingPlaylists}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding PlaylistSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgPlaylists"
                          ItemsSource="{Binding DisplayPlaylists}"
                          SelectedItem="{Binding SelectedPlaylist}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ShowPlaylistTracksCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play" mvx:Bi.nd="Command PlayTrackCommand">
                                <MenuItem Header="Playlist" mvx:Bi.nd="Command PlayPlaylistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to Queue" mvx:Bi.nd="Command AddTrackCommand">
                                <MenuItem Header="Playlist" mvx:Bi.nd="Command AddPlaylistCommand" />
                            </MenuItem>
                            <MenuItem Header="Delete Playlist" mvx:Bi.nd="Command DeletePlaylistCommand" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Playlist Name"
                                            Binding="{Binding PlaylistName}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
            </extensions:CustomGrid>
            <extensions:CustomGrid x:Name="gdTracks"
                                   Visibility="Visible"
                                   IsShowing="{Binding ShowingTracks}">
                <extensions:CustomGrid.Resources>
                    <CollectionViewSource x:Key="AllTracks" Source="{Binding DisplayTracks}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Album" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </extensions:CustomGrid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding TrackSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgTracks"
                          ItemsSource="{Binding Source={StaticResource AllTracks}}"
                          SelectedItem="{Binding SelectedTrack, Mode=TwoWay}"
                          SelectedIndex="{Binding SelectedTrackIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding PlayTracksFromCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play" mvx:Bi.nd="Command PlayTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command PlayTrackCommand" />
                                <MenuItem Header="Album" mvx:Bi.nd="Command PlayAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command PlayArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to Queue" mvx:Bi.nd="Command AddTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command AddTrackCommand" />
                                <MenuItem Header="Album" mvx:Bi.nd="Command AddAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command AddArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to playlist" ItemsSource="{Binding DisplayPlaylists}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem Header="{Binding PlaylistName}" Command="{Binding CreateListingCommand}" />
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#"
                                            Binding="{Binding TrackNum}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Track Name"
                                            Binding="{Binding TrackName}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Contributing Artists"
                                            Width="Auto"
                                            Binding="{Binding DisplayContributingArtists}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Genres"
                                            Width="Auto"
                                            Binding="{Binding DisplayGenres}"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="True" Header="{Binding Items[0].AlbumName}">
                                                    <Expander.Content>
                                                        <ItemsPresenter />
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>
            </extensions:CustomGrid>
            <extensions:CustomGrid x:Name="gdArtistTracks"
                                   IsShowing="{Binding ShowingArtistTracks}">
                <extensions:CustomGrid.Resources>
                    <CollectionViewSource x:Key="ArtistTracks" Source="{Binding DisplayArtistTracks}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Album" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </extensions:CustomGrid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding TrackSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgArtistTracks"
                          ItemsSource="{Binding Source={StaticResource ArtistTracks}}"
                          SelectedItem="{Binding SelectedTrack, Mode=TwoWay}"
                          SelectedIndex="{Binding SelectedArtistTrackIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding PlayArtistFromCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play" mvx:Bi.nd="Command PlayTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command PlayTrackCommand" />
                                <MenuItem Header="Album" mvx:Bi.nd="Command PlayAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command PlayArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to Queue" mvx:Bi.nd="Command AddTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command AddTrackCommand" />
                                <MenuItem Header="Album" mvx:Bi.nd="Command AddAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command AddArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to playlist" ItemsSource="{Binding DisplayPlaylists}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem Header="{Binding PlaylistName}" Command="{Binding CreateListingCommand}" />
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#"
                                            Binding="{Binding TrackNum}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Track Name"
                                            Binding="{Binding TrackName}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Contributing Artists"
                                            Binding="{Binding DisplayContributingArtists}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Genres"
                                            Binding="{Binding DisplayGenres}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="True" Header="{Binding Items[0].AlbumName}">
                                                    <Expander.Content>
                                                        <ItemsPresenter />
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>
            </extensions:CustomGrid>
            <extensions:CustomGrid x:Name="gdAlbumTracks"
                                   IsShowing="{Binding ShowingAlbumTracks}">
                <extensions:CustomGrid.Resources>
                    <CollectionViewSource x:Key="AlbumTracks" Source="{Binding DisplayAlbumTracks}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Disc" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </extensions:CustomGrid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding TrackSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgAlbumTracks"
                          ItemsSource="{Binding Source={StaticResource AlbumTracks}}"
                          SelectedItem="{Binding SelectedTrack, Mode=TwoWay}"
                          SelectedIndex="{Binding SelectedAlbumTrackIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding PlayAlbumFromCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play" mvx:Bi.nd="Command PlayTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command PlayTrackCommand" />
                                <MenuItem Header="Album" mvx:Bi.nd="Command PlayAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command PlayArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to Queue" mvx:Bi.nd="Command AddTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command AddTrackCommand" />
                                <MenuItem Header="Album" mvx:Bi.nd="Command AddAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command AddArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to playlist" ItemsSource="{Binding DisplayPlaylists}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem Header="{Binding PlaylistName}" Command="{Binding CreateListingCommand}" />
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#"
                                            Binding="{Binding TrackNum}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Track Name"
                                            Binding="{Binding TrackName}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Contributing Artists"
                                            Width="Auto"
                                            Binding="{Binding DisplayContributingArtists}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Genres"
                                            Width="Auto"
                                            Binding="{Binding DisplayGenres}"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <StackPanel>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="Disc " />
                                                        <TextBlock Text="{Binding Items[0].DiscNum}" />
                                                        <TextBlock Text=": " />
                                                        <TextBlock Text="{Binding Items[0].DiscName}" />
                                                    </StackPanel>
                                                    <ItemsPresenter />
                                                </StackPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>

                </DataGrid>
            </extensions:CustomGrid>
            <extensions:CustomGrid x:Name="gdGenreTracks"
                                   IsShowing="{Binding ShowingGenreTracks}">
                <extensions:CustomGrid.Resources>
                    <CollectionViewSource x:Key="GenreTracks" Source="{Binding DisplayGenreTracks}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Album" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </extensions:CustomGrid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding TrackSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgGenreTracks"
                          ItemsSource="{Binding Source={StaticResource GenreTracks}}"
                          SelectedItem="{Binding SelectedTrack, Mode=TwoWay}"
                          SelectedIndex="{Binding SelectedGenreTrackIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding PlayGenreFromCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play" mvx:Bi.nd="Command PlayTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command PlayTrackCommand" />
                                <MenuItem Header="Album" mvx:Bi.nd="Command PlayAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command PlayArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to Queue" mvx:Bi.nd="Command AddTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command AddTrackCommand" />
                                <MenuItem Header="Album" mvx:Bi.nd="Command AddAlbumCommand" />
                                <MenuItem Header="Artist" mvx:Bi.nd="Command AddArtistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to playlist" ItemsSource="{Binding DisplayPlaylists}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem Header="{Binding PlaylistName}" Command="{Binding CreateListingCommand}" />
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#"
                                            Binding="{Binding TrackNum}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Track Name"
                                            Width="Auto"
                                            Binding="{Binding TrackName}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Contributing Artists"
                                            Width="Auto"
                                            Binding="{Binding DisplayContributingArtists}"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="True" Header="{Binding Items[0].AlbumName}">
                                                    <Expander.Content>
                                                        <ItemsPresenter />
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>

                </DataGrid>
            </extensions:CustomGrid>
            <extensions:CustomGrid x:Name="gdPlaylistTracks"
                                   IsShowing="{Binding ShowingPlaylistTracks}">
                <extensions:CustomGrid.Resources>
                    <CollectionViewSource x:Key="PlaylistTracks" Source="{Binding DisplayPlaylistTracks}" />
                </extensions:CustomGrid.Resources>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding TrackSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGrid x:Name="dgPlaylistTracks"
                          ItemsSource="{Binding Source={StaticResource PlaylistTracks}}"
                          SelectedItem="{Binding SelectedTrack, Mode=TwoWay}"
                          SelectedIndex="{Binding SelectedPlaylistTrackIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding PlayPlaylistFromCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Play" mvx:Bi.nd="Command PlayTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command PlayTrackCommand" />
                                <MenuItem Header="Playlist" mvx:Bi.nd="Command PlayPlaylistCommand" />
                            </MenuItem>
                            <MenuItem Header="Add to Queue" mvx:Bi.nd="Command AddTrackCommand">
                                <MenuItem Header="Song" mvx:Bi.nd="Command AddTrackCommand" />
                                <MenuItem Header="Playlist" mvx:Bi.nd="Command AddPlaylistCommand" />
                            </MenuItem>
                            <MenuItem Header="Delete Playlist" mvx:Bi.nd="Command DeletePlaylistCommand" />
                            <MenuItem Header="Add to playlist" ItemsSource="{Binding DisplayPlaylists}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem Header="{Binding PlaylistName}" Command="{Binding CreateListingCommand}" />
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                            </MenuItem>
                            <MenuItem Header="Remove from Playlist" mvx:Bi.nd="Command RemoveListingCommand" />
                            <MenuItem Header="Move Up" mvx:Bi.nd="Command MoveUpCommand" />
                            <MenuItem Header="Move Down" mvx:Bi.nd="Command MoveDownCommand" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Track Name"
                                            Binding="{Binding TrackName}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Header="Contributing Artists"
                                            Binding="{Binding DisplayContributingArtists}"
                                           Width="Auto"
                                             IsReadOnly="True" />
                        <DataGridTextColumn Header="Genres"
                                            Binding="{Binding DisplayGenres}"
                                            Width="Auto"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
            </extensions:CustomGrid>
        </Grid>
    </DockPanel>
</views:MvxWpfView>
